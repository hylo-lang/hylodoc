
.page-tree {
  // Colors
  $background: #161616;

  background-color: $background;

  $margin: 8px;

  display: grid;
  grid-template-rows: auto 1fr;

  .sidebar-search-cont {
    margin: $margin;
    box-sizing: border-box;

    // Colors
    $background: #0F0F0F;
    $placeholder: #717171;
    $text: $text-secondary;
    $focus: #F25FB7;

    width: calc(100% - #{$margin} * 2);
    @apply relative z-0 py-0 pr-0 pl-8 mb-3 rounded-md overflow-hidden;
    border: 1px solid $thin-divider;

    & > input {
      @apply w-full py-2 px-2 pl-0 text-sm m-0 text-center outline-none;
      background-color: var(--navigation-input-background);
      color: $text;

      &::placeholder {
        color: $placeholder;
      }
    }

    &:focus-within {
      border-color: $focus;
    }

    &:has(> input:not(:placeholder-shown)):before {
      @apply hidden;
    }

    &:before {
      @apply absolute w-5 h-6 rounded-md z-10 border-2;
      top: calc(50% - 0.7rem);
      left: calc(50% - 0.85rem);
      content: '‎';
      border-color: $thin-divider;
    }

    &:after {
      @apply absolute w-4 h-4 z-10;
      content: '‎';
      background-image: url(icons/search.svg);
      background-size: cover;
      background-repeat: no-repeat;
      top: calc(50% - 0.45rem);
      left: 0.5rem;
    }
  }

  $depth-indentation: 16px;

  ul > li {
    --next-depth: calc(var(--depth) + 1);
  }
  li > ul {
    --depth: var(--next-depth);
  }
  .nav-entry {
    display: flex;
    padding-left: calc(var(--depth) * $depth-indentation + $margin);
    align-items: center;

    & > .icon {
      width: 16px;
      height: 16px;
      display: block;
      background-position: center;
      background-repeat: no-repeat;
      margin-right: 4px;
    }

    & > * {
      flex-shrink: 0;
    }

    &.folder > .icon {
      background-image: url(icons/folder.svg);
    }
    &.source-file > .icon {
      background-image: url(icons/source-file.svg);
    }
    &.article > .icon {
      background-image: url(icons/article.svg);
    }
  }

  li {
    position: relative;

    &.active > .nav-entry {
      background-color: var(--active-navigation-item-bg);
      color: $text-primary;
    }
  }

  .go-to-location {
    position: absolute;
    right: 16px;
    top: 0;
    height: 32px;
    width: 32px;
    background-position: center;
    background-repeat: no-repeat;
    background-image: url(icons/source.svg);
    display: none;
  }

  // When something on top is hovered, the nav-entry should still be considered hovered
  .nav-entry:hover, input[type=checkbox]:hover + .nav-entry, .nav-entry:has(+ .go-to-location:hover) {
    background-color: var(--navigation-input);

    & + .go-to-location {
      display: block;
    }
  }

  .arrow {
    background-image: url(icons/arrow_solid.svg);
    width: 32px;
    height: 32px;
    display: block;
    visibility: hidden;
    background-position: center;
    background-repeat: no-repeat;
    transform: rotate(-90deg);
  }
  input[type=checkbox] + .nav-entry > .arrow {
    visibility: visible;
  }

  input[type=checkbox] {
    width: 32px;
    height: 32px;
    position: absolute;
    left: calc(var(--depth) * $depth-indentation + $margin);
    opacity: 0;
    z-index: 1;

    &:checked + .nav-entry > .arrow {
      transform: rotate(0);
    }
    &:focus-visible + .nav-entry > .arrow {
      outline: 2px solid white;
    }
  }

  input[type=checkbox]:not(:checked) ~ ul {
    display: none;
  }

  li[forced-visible=true] > ul {
    display: block !important;
  }

  ul, li {
    display: block;
    width: 100%;
  }

  code.inline {
    font-size: .9rem; // Jetbrains mono looks a bit larger visually, so we need to offset it a bit
  }
}

#navigation-tree-container {
  overflow: auto;
  --depth: 0
}
